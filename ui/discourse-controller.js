// Generated by CoffeeScript 1.6.2
(function() {
  var Montage, RangeController, Reqwest;

  Montage = require("montage").Montage;

  Reqwest = require("reqwest");

  RangeController = require("montage/core/range-controller").RangeController;

  exports.DiscourseController = Montage.specialize({
    siteAddress: {
      value: null
    },
    category: {
      value: null
    },
    topic: {
      value: null
    },
    constructor: {
      value: function() {
        this.categories = {};
        this.topics = {};
        this.posts = {};
        this.categoryController = new RangeController();
        this.topicController = new RangeController();
        this.postController = new RangeController();
        this.defineBinding("categoryController.content", {
          "<-": "categories.category_list.categories"
        });
        this.defineBinding("topicController.content", {
          "<-": "topics.topic_list.topics"
        });
        this.defineBinding("postController.content", {
          "<-": "posts.post_stream.posts"
        });
        this.defineBinding("category", {
          "<-": "category ?? categoryController.selection.0.slug"
        });
        this.defineBinding("topic", {
          "<-": "topic ?? topicController.selection.0.id"
        });
        this.addOwnPropertyChangeListener("category", this);
        return this.addOwnPropertyChangeListener("topic", this);
      }
    },
    initializeForum: {
      value: function() {
        var _this = this;

        return this.getCategories().then(function(output) {
          return _this.categories = output;
        });
      }
    },
    handleCategoryChange: {
      value: function(selected) {
        var _this = this;

        if (selected === null) {
          return;
        }
        return this.getTopics().then(function(output) {
          return _this.topics = output;
        });
      }
    },
    handleTopicChange: {
      value: function(selected) {
        var _this = this;

        if (selected === null) {
          return;
        }
        return this.getPosts().then(function(output) {
          return _this.posts = output;
        });
      }
    },
    getRequest: {
      value: function(path, params) {
        var url;

        url = "http://" + this.siteAddress + "/" + path + ".json";
        if (params) {
          url += "?" + Reqwest.toQueryString(params);
        }
        return Reqwest({
          url: url,
          type: "json",
          method: "get",
          crossOrigin: true
        });
      }
    },
    getCategories: {
      value: function() {
        return this.getRequest("categories");
      }
    },
    getTopics: {
      value: function(category) {
        var cat;

        cat = category || this.category;
        return this.getRequest(cat === "" ? "latest" : "category/" + cat);
      }
    },
    getPosts: {
      value: function(topicId) {
        return this.getRequest("t/" + (topicId || this.topic));
      }
    }
  });

}).call(this);
